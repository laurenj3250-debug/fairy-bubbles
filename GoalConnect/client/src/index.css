@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE - Whimsical Pastel Theme */
:root {
  --button-outline: rgba(0,0,0, .08);
  --badge-outline: rgba(0,0,0, .04);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -6; /* Softer borders */

  /* Softer backgrounds for elevation */
  --elevate-1: rgba(0,0,0, .02);
  --elevate-2: rgba(0,0,0, .05);

  /* Light Seafoam background - Figma inspired */
  --background: 165 30% 97%;

  /* Warm Charcoal for primary text */
  --foreground: 220 15% 25%;

  /* Soft mint border */
  --border: 165 20% 90%;

  /* Pure white cards */
  --card: 0 0% 100%;

  --card-foreground: 220 15% 25%;

  /* Very subtle card border */
  --card-border: 165 15% 93%;

  /* Sidebar matches card */
  --sidebar: 0 0% 100%;

  --sidebar-foreground: 220 15% 25%;

  --sidebar-border: 220 10% 92%;

  /* Emerald Teal primary - Figma inspired */
  --sidebar-primary: 163 55% 52%;

  --sidebar-primary-foreground: 0 0% 100%;

  /* Light mint accent for sidebar */
  --sidebar-accent: 163 40% 93%;

  --sidebar-accent-foreground: 163 55% 45%;

  --sidebar-ring: 163 55% 52%;

  /* Popovers */
  --popover: 0 0% 100%;

  --popover-foreground: 220 15% 25%;

  --popover-border: 220 10% 90%;

  /* Emerald Teal - main primary color - Figma inspired */
  --primary: 163 55% 52%;

  --primary-foreground: 0 0% 100%;

  /* Soft Peach - streak badge color */
  --secondary: 25 85% 68%;

  --secondary-foreground: 220 15% 25%;

  /* Light Mint - muted backgrounds for completed items */
  --muted: 163 40% 93%;

  /* Soft Gray - secondary text */
  --muted-foreground: 220 12% 50%;

  /* Soft Lavender - tertiary accent */
  --accent: 260 35% 70%;

  --accent-foreground: 220 15% 25%;

  /* Muted Coral - soft destructive */
  --destructive: 5 70% 70%;

  --destructive-foreground: 0 0% 100%;

  /* Soft input backgrounds */
  --input: 150 20% 92%;
  --ring: 170 60% 60%;
  
  /* Pastel chart colors */
  --chart-1: 170 60% 60%;
  --chart-2: 25 90% 70%;
  --chart-3: 260 40% 75%;
  --chart-4: 140 50% 65%;
  --chart-5: 40 85% 65%;

  --font-sans: 'Inter', sans-serif;
  --font-serif: 'Source Serif Pro', serif;
  --font-mono: 'IBM Plex Mono', monospace;
  
  /* Increased border radius for softer, more organic shapes */
  --radius: 1.5rem; /* 24px - much rounder */
  
  /* Soft layered shadows with color tint */
  --shadow-2xs: 0 2px 4px hsl(220 15% 25% / 0.04);
  --shadow-xs: 0 4px 6px hsl(220 15% 25% / 0.04);
  --shadow-sm: 0 6px 12px hsl(220 15% 25% / 0.06), 0 2px 4px hsl(220 15% 25% / 0.03);
  --shadow: 0 8px 16px hsl(220 15% 25% / 0.06), 0 3px 6px hsl(220 15% 25% / 0.04);
  --shadow-md: 0 12px 24px hsl(220 15% 25% / 0.08), 0 4px 8px hsl(220 15% 25% / 0.04);
  --shadow-lg: 0 16px 32px hsl(220 15% 25% / 0.10), 0 6px 12px hsl(220 15% 25% / 0.05);
  --shadow-xl: 0 24px 48px hsl(220 15% 25% / 0.12), 0 8px 16px hsl(220 15% 25% / 0.06);
  --shadow-2xl: 0 32px 64px hsl(220 15% 25% / 0.14), 0 12px 24px hsl(220 15% 25% / 0.07);
  
  /* Gradient primitives */
  --gradient-sunrise: linear-gradient(135deg, hsl(35 100% 88%) 0%, hsl(15 85% 75%) 100%);
  --gradient-lagoon: linear-gradient(135deg, hsl(180 70% 88%) 0%, hsl(170 60% 75%) 100%);
  --gradient-radial-highlight: radial-gradient(circle at center, hsl(170 60% 60% / 0.15) 0%, transparent 70%);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .08);
  --badge-outline: rgba(255,255,255, .04);

  --opaque-button-border-intensity: 8;  /* Softer borders in dark mode */

  /* Softer backgrounds for elevation in dark mode */
  --elevate-1: rgba(255,255,255, .03);
  --elevate-2: rgba(255,255,255, .06);

  /* Soft dark background with subtle warmth */
  --background: 230 15% 12%;

  /* Soft light text */
  --foreground: 220 15% 88%;

  /* Subtle border */
  --border: 230 10% 22%;

  /* Elevated card surface */
  --card: 230 12% 16%;

  --card-foreground: 220 15% 88%;

  /* Subtle card border */
  --card-border: 230 10% 24%;

  /* Sidebar matches card */
  --sidebar: 230 12% 16%;

  --sidebar-foreground: 220 15% 88%;

  --sidebar-border: 230 10% 24%;

  /* Soft Teal primary (slightly brighter for dark mode) */
  --sidebar-primary: 170 55% 55%;

  --sidebar-primary-foreground: 0 0% 100%;

  /* Soft lavender accent */
  --sidebar-accent: 260 30% 28%;

  --sidebar-accent-foreground: 170 55% 60%;

  --sidebar-ring: 170 55% 55%;

  /* Popovers */
  --popover: 230 12% 16%;

  --popover-foreground: 220 15% 88%;

  --popover-border: 230 10% 26%;

  /* Soft Teal primary */
  --primary: 170 55% 55%;

  --primary-foreground: 0 0% 100%;

  /* Warm Peach (adjusted for dark mode) */
  --secondary: 25 80% 60%;

  --secondary-foreground: 220 15% 12%;

  /* Soft Sage - muted backgrounds */
  --muted: 150 15% 24%;

  /* Muted text */
  --muted-foreground: 220 10% 60%;

  /* Soft Lavender accent */
  --accent: 260 35% 50%;

  --accent-foreground: 220 15% 95%;

  /* Muted Coral destructive */
  --destructive: 5 65% 60%;

  --destructive-foreground: 0 0% 100%;

  /* Soft input backgrounds */
  --input: 230 10% 22%;
  --ring: 170 55% 55%;
  
  /* Pastel chart colors (adjusted for dark mode) */
  --chart-1: 170 55% 55%;
  --chart-2: 25 80% 60%;
  --chart-3: 260 35% 60%;
  --chart-4: 140 45% 55%;
  --chart-5: 40 75% 55%;

  /* Soft layered shadows in dark mode */
  --shadow-2xs: 0 2px 4px hsl(0 0% 0% / 0.20);
  --shadow-xs: 0 4px 6px hsl(0 0% 0% / 0.20);
  --shadow-sm: 0 6px 12px hsl(0 0% 0% / 0.24), 0 2px 4px hsl(0 0% 0% / 0.12);
  --shadow: 0 8px 16px hsl(0 0% 0% / 0.24), 0 3px 6px hsl(0 0% 0% / 0.12);
  --shadow-md: 0 12px 24px hsl(0 0% 0% / 0.28), 0 4px 8px hsl(0 0% 0% / 0.14);
  --shadow-lg: 0 16px 32px hsl(0 0% 0% / 0.32), 0 6px 12px hsl(0 0% 0% / 0.16);
  --shadow-xl: 0 24px 48px hsl(0 0% 0% / 0.36), 0 8px 16px hsl(0 0% 0% / 0.18);
  --shadow-2xl: 0 32px 64px hsl(0 0% 0% / 0.40), 0 12px 24px hsl(0 0% 0% / 0.20);
  
  /* Gradient primitives (adjusted for dark mode) */
  --gradient-sunrise: linear-gradient(135deg, hsl(35 90% 35%) 0%, hsl(15 75% 30%) 100%);
  --gradient-lagoon: linear-gradient(135deg, hsl(180 60% 30%) 0%, hsl(170 50% 25%) 100%);
  --gradient-radial-highlight: radial-gradient(circle at center, hsl(170 55% 55% / 0.12) 0%, transparent 70%);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --radius: 1.3rem;
  --spacing: 0.25rem;
  --font-mono: Menlo, monospace;
  --font-sans: Open Sans, sans-serif;
  --font-serif: Georgia, serif;
  --tracking-normal: 0em;
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    background: transparent;
  }

  body {
    @apply font-sans antialiased text-foreground;
    background: transparent;
  }

  #root {
    position: relative;
    z-index: 1;
    background: transparent;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: -1;
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: 999;
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}

/* Enchanted Forest Design System */
@layer utilities {
  /* Magical Gradient Background Animation */
  .enchanted-bg {
    background: linear-gradient(135deg, #1a1f3a 0%, #2d1b4e 25%, #1f3d4a 50%, #2a4a3a 75%, #3d2f5c 100%);
    background-size: 400% 400%;
    animation: dreamyGradient 20s ease infinite;
  }

  @keyframes dreamyGradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* Magical Glow Effect */
  .magical-glow {
    animation: magical-glow 4s infinite;
  }

  @keyframes magical-glow {
    0%, 100% {
      box-shadow: 0 0 20px rgba(167, 139, 250, 0.3),
                 0 0 40px rgba(139, 92, 246, 0.2),
                 0 0 60px rgba(124, 58, 237, 0.1);
    }
    50% {
      box-shadow: 0 0 30px rgba(167, 139, 250, 0.5),
                 0 0 60px rgba(139, 92, 246, 0.3),
                 0 0 90px rgba(124, 58, 237, 0.2);
    }
  }

  /* Floating Animation */
  .float-animation {
    animation: float 3s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-8px); }
  }

  /* Shimmer Effect */
  .shimmer-effect::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg,
      transparent,
      rgba(255, 255, 255, 0.05),
      transparent);
    animation: shimmer 3s infinite;
  }

  @keyframes shimmer {
    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
    100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
  }

  /* Spinning Halo */
  .spinning-halo::after {
    content: '';
    position: absolute;
    top: -5px;
    left: -5px;
    right: -5px;
    bottom: -5px;
    border-radius: 50%;
    background: linear-gradient(45deg, #a855f7, transparent, #ec4899, transparent);
    animation: spin 4s linear infinite;
    z-index: -1;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Pulse Animation */
  .pulse-animation {
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
  }

  /* Floating Sparkle */
  .float-sparkle {
    animation: float-sparkle 4s ease-in-out infinite;
  }

  @keyframes float-sparkle {
    0%, 100% {
      transform: translateY(0) rotate(0deg);
      opacity: 0.6;
    }
    50% {
      transform: translateY(-15px) rotate(180deg);
      opacity: 1;
    }
  }

  /* Fade In Animation */
  .fade-in {
    animation: fadeIn 0.5s ease;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Pop Animation */
  .pop {
    animation: pop 0.3s ease;
  }

  @keyframes pop {
    0% { transform: scale(0); }
    50% { transform: scale(1.3); }
    100% { transform: scale(1); }
  }

  /* Bounce Animation - triggered on task completion */
  .bounce {
    animation: bounce 0.6s ease;
  }

  @keyframes bounce {
    0%, 100% { transform: translateY(0); }
    25% { transform: translateY(-20px); }
    50% { transform: translateY(-10px); }
    75% { transform: translateY(-15px); }
  }

  /* Twinkle Stars */
  .twinkle {
    animation: twinkle 3s infinite;
  }

  @keyframes twinkle {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.5); }
  }

  /* Floating Fairy Lights */
  .float-fairy {
    animation: float-fairy 8s infinite ease-in-out;
  }

  @keyframes float-fairy {
    0%, 100% {
      transform: translate(0, 0) scale(1);
      opacity: 0;
    }
    10% { opacity: 1; }
    50% {
      transform: translate(50px, -80px) scale(1.2);
      opacity: 0.8;
    }
    90% { opacity: 1; }
  }

  /* Pulse Glow */
  .pulse-glow {
    animation: pulse-glow 2s infinite;
  }

  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 25px rgba(251, 191, 36, 0.6);
    }
    50% {
      box-shadow: 0 0 35px rgba(251, 191, 36, 0.8);
    }
  }

  /* Rotate Animation */
  .rotate-slow {
    animation: rotate 10s linear infinite;
  }

  @keyframes rotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Glassmorphism */
  .glass-card {
    background: linear-gradient(135deg,
      rgba(167, 139, 250, 0.15) 0%,
      rgba(139, 92, 246, 0.15) 50%,
      rgba(124, 58, 237, 0.15) 100%);
    backdrop-filter: blur(30px) saturate(180%);
    border: 2px solid rgba(167, 139, 250, 0.3);
    box-shadow: 0 8px 32px rgba(139, 92, 246, 0.3),
               inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  .glass-card-green {
    background: linear-gradient(135deg,
      rgba(16, 185, 129, 0.15) 0%,
      rgba(5, 150, 105, 0.15) 100%);
    backdrop-filter: blur(30px) saturate(180%);
    border: 2px solid rgba(16, 185, 129, 0.3);
    box-shadow: 0 8px 32px rgba(16, 185, 129, 0.3),
               inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  .glass-card-pink {
    background: linear-gradient(135deg,
      rgba(236, 72, 153, 0.15) 0%,
      rgba(168, 85, 247, 0.15) 50%,
      rgba(139, 92, 246, 0.15) 100%);
    backdrop-filter: blur(30px) saturate(180%);
    border: 2px solid rgba(236, 72, 153, 0.3);
    box-shadow: 0 8px 32px rgba(236, 72, 153, 0.3),
               inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  .glass-card-blue {
    background: linear-gradient(135deg,
      rgba(59, 130, 246, 0.15) 0%,
      rgba(37, 99, 235, 0.15) 100%);
    backdrop-filter: blur(30px) saturate(180%);
    border: 2px solid rgba(59, 130, 246, 0.3);
    box-shadow: 0 8px 32px rgba(59, 130, 246, 0.3),
               inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  /* Magical Forest Background Styles */
  #magical-forest-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: -1;
    overflow: hidden;
    background: linear-gradient(to bottom, #0a0e1a 0%, #1a1f3a 50%, #0f1828 100%);
  }

  #magical-forest-bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0.8;
  }

  #magical-forest-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  .particle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: radial-gradient(circle, rgba(255, 220, 150, 1), transparent);
    border-radius: 50%;
    animation: float-up 8s linear forwards;
    pointer-events: none;
  }

  @keyframes float-up {
    0% {
      opacity: 0;
      transform: translateY(0) scale(0);
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      opacity: 0;
      transform: translateY(-100vh) scale(1);
    }
  }

  .sparkle {
    position: absolute;
    width: 8px;
    height: 8px;
    background: radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(150, 200, 255, 0.8) 50%, transparent);
    border-radius: 50%;
    animation: twinkle 1.5s ease-in-out forwards;
    pointer-events: none;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.8), 0 0 20px rgba(150, 200, 255, 0.6);
  }

  .floating-sparkle {
    position: absolute;
    width: 6px;
    height: 6px;
    background: radial-gradient(circle, rgba(255, 200, 100, 1) 0%, rgba(255, 150, 50, 0.8) 50%, transparent);
    border-radius: 50%;
    animation: float-drift 6s ease-in-out forwards;
    pointer-events: none;
    box-shadow: 0 0 8px rgba(255, 200, 100, 0.8);
  }

  @keyframes float-drift {
    0% {
      opacity: 0;
      transform: translate(0, 0);
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 0.8;
    }
    100% {
      opacity: 0;
      transform: translate(var(--drift-x), var(--drift-y));
    }
  }

  .pulse-sparkle {
    position: absolute;
    width: 12px;
    height: 12px;
    background: radial-gradient(circle, rgba(100, 200, 255, 1) 0%, rgba(50, 150, 255, 0.6) 50%, transparent);
    border-radius: 50%;
    animation: pulse 3s ease-in-out forwards;
    pointer-events: none;
    box-shadow: 0 0 15px rgba(100, 200, 255, 0.9);
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 0;
      transform: scale(0.5);
    }
    50% {
      opacity: 1;
      transform: scale(1.5);
    }
  }
}